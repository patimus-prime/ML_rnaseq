---
title: "RNASeq & Clinical Data, ML, and Quarto"
bibliography: citations.bibtex
format:
  html:
    code-fold: true
    theme:
      dark: cyborg
      light: zephyr
      # light: vapor
---


<!-- This cell has some nice options for the theme! -->


```{python}
# Just some comments on YAML:

# jupyter: python3 # should be unnecessary, or even bad if Py + R since use knitr for our crap

# FYI:

# VAPOR IS DOPE. But, requires light: vapor to get the real neon going on :)
#
# Cyborg is BLACK, darkly is gray-black, slate is gray,
# Cyborg
# Darkly
# Slate
# Solar
# Superhero

# LIGHT:
# Morph is fun
# lux is classy
# zephyr good light, rich
# litera corporate normie


# ONE MORE THING ON CITATIONS:
# can use zotero, per:
# https://quarto.org/docs/visual-editor/technical.html#citations-from-zotero
# but we on WSL2, so... one point to to Mac.
# can use: https://github.com/XFY9326/Zotero-WSL-ProxyServer
# this requires running server + zotero on windows. not sure if my shrimp computer can handle it, probably better export bibtex and import to whatever
# may also be better so that reproducible with git etc.
```


Welcome. This work replicates some of what is seen in @carron_clinical_2021, @pizzuti_distinct_2020, and @sechrist_concordance_2020. Basically, our objective in the analysis is take RNASeq and clinical data from TCGA (upstream of this analysis, data were pooled) and build a model to predict cancer diagnosis. The value of the work is to achieve a secondary, probably cheaper RNASeq-based tool that can accurately and precisely predict cancer status, as confirmed by FISH/current biochemical test.

The data are taken from TCGA/BRCA and anonymized, but are controlled per TCGA and therefore won't be in the Git repo, feel free to email me, pat\@patrickfinnerty.com.

The dataset is rather field-specific, but, broadly, numeric and high-dimensional, with a binary categorical prediction (cancer assay result positive/negative) being the goal. Various categorical data exist from clinic that are one-hot encoded.

The technologies used here include:
 <!-- and make sure to have double spacing with bullets -->

- Quarto to generate this document using both Python and R libraries 

- Python and R package requirements are managed via Poetry and renv for... good practice, at the very least. Reproducibility/traceability in future otherwise 

- RNASeq data analysis tools in R, other statistical tools in Python 

- Visualization tools in Py and R 

- Machine learning libraries in Py (Sci-kit, XGB, PyTorch) 

- (stretch) deployment of model to Hugging Face, which is then called via API, to be fancy! 

- Coffee

Alright, here we go! First read in the data:


```{r}
library(quarto)
library(dplyr)
library(tidyr)
library(knitr)
library(edgeR)
setwd("~/R/ML_rnaseq")
df_rnaseq <- read.csv("data/tcga.brca.rsem.csv", stringsAsFactors = FALSE)
print(df_rnaseq)
```

